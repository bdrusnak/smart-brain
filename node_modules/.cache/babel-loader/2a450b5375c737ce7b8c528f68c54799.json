{"ast":null,"code":"var _jsxFileName = \"D:\\\\5_denserver\\\\html\\\\udemy\\\\section25\\\\smart-brain\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Particles from 'react-particles-js'; //import Clarifai from 'clarifai';\n\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Navigation from './components/Navigation/Navigation';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport './App.css'; // //You must add your own API key here from Clarifai.\n// const app = new Clarifai.App({\n//     apiKey: '5cbe4f041fc24824b220f90c2580a27c'\n// });\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 30,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n};\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  box: {},\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      fetch('https://intense-retreat-78499.herokuapp.com/imageurl', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          input: this.state.input\n        })\n      }).then(response => response.json()) // app.models\n      // .predict(\n      //     // HEADS UP! Sometimes the Clarifai Models can be down or not working as they are constantly getting updated.\n      //     // A good way to check if the model you are using is up, is to check them on the clarifai website. For example,\n      //     // for the Face Detect Mode: https://www.clarifai.com/models/face-detection\n      //     // If that isn't working, then that means you will have to wait until their servers are back up. Another solution\n      //     // is to use a different version of their model that works like: `c0c0ac362b03416da06ab3fa36fb58e3`\n      //     // so you would change from:\n      //     // .predict(Clarifai.FACE_DETECT_MODEL, this.state.input)\n      //     // to:\n      //     // .predict('c0c0ac362b03416da06ab3fa36fb58e3', this.state.input)\n      //     Clarifai.FACE_DETECT_MODEL,\n      //     this.state.input)\n      .then(response => {\n        console.log('hi', response);\n\n        if (response) {\n          fetch('https://intense-retreat-78499.herokuapp.com/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            this.setState(Object.assign(this.state.user, {\n              entries: count\n            }));\n          }).catch(console.log);\n        }\n\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      }).catch(err => console.log(err));\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signout' || route === 'signin') {\n        this.setState(initialState);\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = initialState;\n  }\n\n  render() {\n    const {\n      isSignedIn,\n      imageUrl,\n      route,\n      box\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Particles, {\n      className: \"particles\",\n      params: particlesOptions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Navigation, {\n      isSignedIn: isSignedIn,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }\n    }), route === 'home' ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Logo, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Rank, {\n      name: this.state.user.name,\n      entries: this.state.user.entries,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(ImageLinkForm, {\n      onInputChange: this.onInputChange,\n      onButtonSubmit: this.onButtonSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(FaceRecognition, {\n      box: box,\n      imageUrl: imageUrl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 25\n      }\n    })) : route === 'signin' ? /*#__PURE__*/React.createElement(Signin, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 23\n      }\n    }) : /*#__PURE__*/React.createElement(Register, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 23\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/5_denserver/html/udemy/section25/smart-brain/src/App.js"],"names":["React","Component","Particles","FaceRecognition","Navigation","Signin","Register","Logo","ImageLinkForm","Rank","particlesOptions","particles","number","value","density","enable","value_area","initialState","input","imageUrl","box","route","isSignedIn","user","id","name","email","entries","joined","App","constructor","loadUser","data","setState","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","onInputChange","event","target","onButtonSubmit","state","fetch","method","headers","body","JSON","stringify","then","response","json","console","log","count","Object","assign","catch","err","onRouteChange","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Particles from 'react-particles-js';\n//import Clarifai from 'clarifai';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Navigation from './components/Navigation/Navigation';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport './App.css';\n\n// //You must add your own API key here from Clarifai.\n// const app = new Clarifai.App({\n//     apiKey: '5cbe4f041fc24824b220f90c2580a27c'\n// });\n\nconst particlesOptions = {\n    particles: {\n        number: {\n            value: 30,\n            density: {\n                enable: true,\n                value_area: 800\n            }\n        }\n    }\n}\n\nconst initialState = {\n    input: '',\n    imageUrl: '',\n    box: {},\n    route: 'signin',\n    isSignedIn: false,\n    user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n    }\n}\nclass App extends Component {\n    constructor() {\n        super();\n        this.state = initialState;\n    }\n\n    loadUser = (data) => {\n        this.setState({user: {\n            id: data.id,\n            name: data.name,\n            email: data.email,\n            entries: data.entries,\n            joined: data.joined\n        }})\n    }\n\n    calculateFaceLocation = (data) => {\n        const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n        const image = document.getElementById('inputimage');\n        const width = Number(image.width);\n        const height = Number(image.height);\n        return {\n            leftCol: clarifaiFace.left_col * width,\n            topRow: clarifaiFace.top_row * height,\n            rightCol: width - (clarifaiFace.right_col * width),\n            bottomRow: height - (clarifaiFace.bottom_row * height)\n        }\n    }\n\n    displayFaceBox = (box) => {\n        this.setState({box: box});\n    }\n\n    onInputChange = (event) => {\n        this.setState({input: event.target.value});\n    }\n\n    onButtonSubmit = () => {\n        this.setState({imageUrl: this.state.input});\n        fetch('https://intense-retreat-78499.herokuapp.com/imageurl', {\n            method: 'post',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\n                input: this.state.input\n            })\n        })\n        .then(response => response.json())\n        // app.models\n        // .predict(\n        //     // HEADS UP! Sometimes the Clarifai Models can be down or not working as they are constantly getting updated.\n        //     // A good way to check if the model you are using is up, is to check them on the clarifai website. For example,\n        //     // for the Face Detect Mode: https://www.clarifai.com/models/face-detection\n        //     // If that isn't working, then that means you will have to wait until their servers are back up. Another solution\n        //     // is to use a different version of their model that works like: `c0c0ac362b03416da06ab3fa36fb58e3`\n        //     // so you would change from:\n        //     // .predict(Clarifai.FACE_DETECT_MODEL, this.state.input)\n        //     // to:\n        //     // .predict('c0c0ac362b03416da06ab3fa36fb58e3', this.state.input)\n        //     Clarifai.FACE_DETECT_MODEL,\n        //     this.state.input)\n        .then(response => {\n            console.log('hi', response)\n            if (response) {\n                fetch('https://intense-retreat-78499.herokuapp.com/image', {\n                    method: 'put',\n                    headers: {'Content-Type': 'application/json'},\n                    body: JSON.stringify({\n                        id: this.state.user.id\n                    })\n                })\n                .then(response => response.json())\n                .then(count => {\n                    this.setState(Object.assign(this.state.user, { entries: count}))\n                })\n                .catch(console.log)\n            }\n            this.displayFaceBox(this.calculateFaceLocation(response))\n        })\n        .catch(err => console.log(err));\n    }\n\n    onRouteChange = (route) => {\n        if (route === 'signout' || route === 'signin') {\n            this.setState(initialState)\n        } else if (route === 'home') {\n            this.setState({isSignedIn: true})\n        }\n        this.setState({route: route});\n    }\n\n    render() {\n        const { isSignedIn, imageUrl, route, box } = this.state;\n        return (\n            <div className=\"App\">\n                <Particles className='particles'\n                    params={particlesOptions}\n                />\n                <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange} />\n                { route === 'home'\n                    ? <div>\n                        <Logo />\n                        <Rank\n                            name={this.state.user.name}\n                            entries={this.state.user.entries}\n                        />\n                        <ImageLinkForm\n                            onInputChange={this.onInputChange}\n                            onButtonSubmit={this.onButtonSubmit}\n                        />\n                        <FaceRecognition box={box} imageUrl={imageUrl} />\n                    </div>\n                : (\n                    route === 'signin'\n                    ? <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n                    : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n                )\n                }\n            </div>\n        );\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}